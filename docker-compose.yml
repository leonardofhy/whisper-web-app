services:
  # Whisper Server Backend (GPU version) - Official prebuilt image
  whisper-server-official:
    image: ghcr.io/ggml-org/whisper.cpp:main-cuda
    container_name: whisper-server-official
    command: [
      "whisper-server",
      "-m", "/models/ggml-large-v3.bin",
      "--convert",
      "--host", "0.0.0.0",
      "--port", "8081",
      "--max-len", "0"
    ]
    ports:
      - "8081:8081"
    volumes:
      - whisper-models:/models
      - ./audio:/audio:ro
    environment:
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - whisper-network
    profiles:
      - gpu-official

  # Whisper Server Backend (GPU version) - Custom build
  whisper-server:
    build:
      context: .
      dockerfile: Dockerfile.whisper
    container_name: whisper-server
    ports:
      - "8081:8081"
    volumes:
      - whisper-models:/app/models
      - ./audio:/app/audio:ro
    environment:
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - whisper-network
    profiles:
      - gpu

  # Whisper Server Backend (CPU version) - Official prebuilt image
  whisper-server-cpu-official:
    image: ghcr.io/ggml-org/whisper.cpp:main
    container_name: whisper-server-cpu-official
    command: [
      "whisper-server",
      "-m", "/models/ggml-large-v3.bin",
      "--convert",
      "--host", "0.0.0.0",
      "--port", "8081",
      "--max-len", "0"
    ]
    ports:
      - "8081:8081"
    volumes:
      - whisper-models:/models
      - ./audio:/audio:ro
    environment:
      - WHISPER_NO_GPU=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - whisper-network
    profiles:
      - cpu-official

  # Whisper Server Backend (CPU version) - Custom build
  whisper-server-cpu:
    build:
      context: .
      dockerfile: Dockerfile.whisper-cpu
    container_name: whisper-server-cpu
    ports:
      - "8081:8081"
    volumes:
      - whisper-models:/app/models
      - ./audio:/app/audio:ro
    environment:
      - WHISPER_NO_GPU=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - whisper-network
    profiles:
      - cpu

  # Web Frontend
  web-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: whisper-frontend
    ports:
      - "3080:80"   # HTTP port
      - "3443:443"  # HTTPS port
    volumes:
      - ./ssl:/etc/ssl/certs:ro
      - ./ssl:/etc/ssl/private:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost/"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - whisper-network

  # Optional: Reverse Proxy (Nginx)
  reverse-proxy:
    image: nginx:alpine
    container_name: whisper-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Add SSL certificates here if needed
      # - ./ssl:/etc/nginx/ssl:ro
    restart: unless-stopped
    profiles:
      - production
    networks:
      - whisper-network

  # Model download helper service
  model-downloader:
    image: ghcr.io/ggml-org/whisper.cpp:main
    container_name: whisper-model-downloader
    command: ["bash", "-c", "cd /models && wget -O ggml-large-v3.bin https://huggingface.co/ggerganov/whisper.cpp/resolve/main/ggml-large-v3.bin && echo 'Model downloaded successfully'"]
    volumes:
      - whisper-models:/models
    profiles:
      - download-model

volumes:
  whisper-models:
    driver: local

networks:
  whisper-network:
    driver: bridge